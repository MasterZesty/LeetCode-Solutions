# source : https://www.desiqna.in/15339/amazon-oa-sde-intern-india-coding-set-136
"""
Code Question 1
Amazon is organizing a farewell party for its interns at a large party hall!
There are q events in the form "+x" and "-x" that denote person x has entered or 
left the party, respectively. Find the maximum number of people at any time at 
the party. Return -1 if the series of events is not possible.

Example
Let's consider the number of queries to be q = 5, the series of people = [1, 2, 2, 3, 4] \
and their status =[+, +,+,+] respectively. Align people[i] with status[i] to describe an event.

Complete the 'getMaxCount' function below
The function is expected to return an INT The function accepts following parameters 
1. INTEGER ARRAY people
2. CHARACTER ARRAY status

public static int getMaxCount (List //){
 Write your code here}
"""

def getMaxCount(people,status):
    people_at_party_at_t = set()

    for i,person in enumerate(people):
        if status[i] == '+':
            if person in people_at_party_at_t:
                return -1
            else:
                people_at_party_at_t.add(person)

        else:
            # status[i] is '-'
            if person in people_at_party_at_t:
                people_at_party_at_t.remove(person)
            else:
                return -1

    return len(people_at_party_at_t)





# people = [1,2,1]
# status = ['+','+','-']
# ans = getMaxCount(people,status)
# print(f'ans : {ans}')

## following code is generated by chatgpt and not part of solution
## it tests solution against sample testcases

def test_getMaxCount():
    test_cases = [
        # Basic test cases
        ([1, 2, 1], ['+', '+', '-'], 1),
        ([1, 2, 3], ['+', '+', '-'], -1),  # Person 3 not present at the start
        ([1, 2, 1], ['+', '-', '+'], -1),  # Person 1 leaves before the end : p1 enters twice and p2 leaves without entering
        ([1, 2, 1], ['+', '+', '+'], -1),  # Person 1 can't enter the party twice
        ([1, 2, 1], ['-', '-', '-'], -1),  # All people leave without entering
        
        # Edge cases
        ([], [], 0),                       # Empty input
        ([1], ['+'], 1),                   # Single person enters
        ([1], ['-'], -1),                  # Single person leaves without entering
        ([1, 1, 1], ['+', '+', '-'], -1),  # All enter and then one leaves
        ([1, 2, 3], ['+', '+', '+'], 3),   # All try to enter at the same time
        ([1, 2, 3], ['-', '-', '-'], -1),  # All leave without entering
    ]
    
    passed = True
    for i, (people, status, expected) in enumerate(test_cases):
        result = getMaxCount(people, status)
        if result != expected:
            passed = False
            print(f"Test case {i + 1} failed: Got {result}, Expected {expected}")
    
    if passed:
        print("All test cases passed.")
    else:
        print("Some test cases failed.")

test_getMaxCount()
