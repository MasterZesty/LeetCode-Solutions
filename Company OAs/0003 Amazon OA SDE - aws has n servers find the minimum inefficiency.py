# source : https://www.desiqna.in/15416/amazon-oa-sde-dublin-india-coding-set-140
"""
Amazon Web Services has n servers, each of them either has high fault tolerance or high reliability. 
A system works better if all the servers have the same attributes. The inefficiency of a group of 
servers is defined as the number of adjacent pairs of servers that have different attributes.
Consider, for example, a set of servers described as 1001001 where '0' means the server has high 
fault tolerance, '1' means the server has high reliability. The inefficiency of this group is 4 
as described in the image below:

Given a string ServerType of length n consisting of 0's, 1's and '?'
Where '0' means the server has high fault tolerance, 1â€™ means the
server has high reliability, and '?' menas You can install any type of
server there, find the minimum inefficiency You Can get after
installing a server at each '?'.

Example
serverType = "??011??0"

In the above example, the number of servers n= 8, One optimal
Way to install servers is to

* Install a server having high faut tolerance (0) at the first and the
second positions

* Install a server having high relsbifty (1) at the sixth 2nd the seventh
positions

After making these changes, the server types are "00011110" The
number of adjacent pairs having different server types is 2. It can be
shown that the answer cannot be reduced from 2. Return 2.

Note that another possible way to achieve a minimum pls of
different adjacent pairs as 2 would be 00011100 and 000110
"""
## Note to self : focus point is minimise the inefficiency 
## i.e. output should be minimum (valid mimimum ideally close to 0)


def findMinimumInefficiency(serverType):
    '''
    returns
    int: the minimum possible inefficiency
    '''
    inefficiency = 0

    # concept is ? does not effect the ineficiency

    for i in range(1,len(serverType)):
        if chr == '?':
            continue
        else:
            if serverType[i] != serverType[i-1] and serverType[i-1] != '?':
                inefficiency += 1

    return inefficiency


# serverType = "??011??0"
# print(findMinimumInefficiency(serverType))

## following code is generated by chatgpt and not part of solution
## it tests solution against sample testcases

def test_findMinimumInefficiency():
    test_cases = [
        ("??011??0", 2),
        ("0", 0),
        ("1", 0),
        ("0?", 0),
        ("?1", 0),
        ("0??", 0),
        ("??1", 0),
        ("?0?", 0),
        ("10?1?01", 2),
        ("?????????", 0)
    ]

    for serverType, expected_result in test_cases:
        result = findMinimumInefficiency(serverType)
        assert result == expected_result, f"For input '{serverType}', expected {expected_result}, but got {result}"

    print("All test cases passed!")


# Run the test function
test_findMinimumInefficiency()